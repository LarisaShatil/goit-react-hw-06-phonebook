{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","redux/contactsSlice.js","components/defaultContactList.js","components/ContactForm/ContactForm.js","redux/filterSlice.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactSlice","createSlice","name","initialState","id","number","reducers","addContact","state","action","payload","deleteContact","filter","item","contactsReducer","reducer","actions","ContactForm","useState","setName","setNumber","contactsList","useSelector","contacts","dispatch","useDispatch","handleChange","target","value","className","s","form","onSubmit","e","preventDefault","obj","uuid","data","toLowerCase","some","contact","includes","alert","checkNewContacts","label","htmlFor","input","type","onChange","pattern","title","placeholder","required","maxLength","addBtn","filterSlice","setFilter","filterReducer","Filter","filterName","currentTarget","ContactList","filteredList","list","map","text","deleteBtn","onClick","App","length","persistConfig","key","storage","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.819efb29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1PTjv\",\"item\":\"ContactList_item__2QA1i\",\"text\":\"ContactList_text__3_3Yp\",\"deleteBtn\":\"ContactList_deleteBtn__1yCYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__QUP6L\",\"title\":\"App_title__2xEb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1GGbI\",\"input\":\"Filter_input__3k_Tw\"};","import { createSlice } from '@reduxjs/toolkit';\r\nimport { defaultContacts } from '../components/defaultContactList';\r\n\r\n// Slice\r\nconst contactSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: defaultContacts,\r\n    \r\n  reducers: {\r\n    addContact(state, action) { return [action.payload, ...state] },\r\n    deleteContact(state, action) {\r\n      return state.filter((item) => item.id !== action.payload)\r\n    }\r\n  }\r\n});\r\n\r\nexport const contactsReducer = contactSlice.reducer;\r\nexport const { addContact, deleteContact } = contactSlice.actions;","  export const defaultContacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n  ","import { useState} from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\r\nimport { addContact } from '../../redux/contactsSlice';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contactsList = useSelector(state => state.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  //taking data from input\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  \r\nconst checkNewContacts = (data) => {\r\n    const name = data.name.toLowerCase();\r\n    const sameContact = contactsList.some(contact => contact.name.toLowerCase().includes(name));\r\n    if (sameContact) {\r\n      return alert(`${data.name} is already in your contacts`)\r\n  }\r\n  return true;\r\n  };\r\n\r\n  //collecting and forwarding data to obj\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    const obj = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number\r\n    };\r\n\r\n    if (checkNewContacts(obj)){\r\n       dispatch(addContact(obj));\r\n    };\r\n\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label\r\n        className={s.label}\r\n        htmlFor=\"name\">👤 Name\r\n        <input\r\n          className={s.input}\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"write the name with the use of letters, apostrophe, dash and spaces. For example, Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc\"\r\n          placeholder=\". . .\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label\r\n        className={s.label}\r\n        htmlFor=\"number\">☎️ Number\r\n        <input\r\n          className={s.input}\r\n          id=\"number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          maxLength=\"14\"\r\n          title=\"use the numeric format for the phone number\"\r\n          placeholder=\". . .\"\r\n          required\r\n        />\r\n      </label>\r\n      <button\r\n        className={s.addBtn}\r\n        type=\"submit\"\r\n      >\r\n        Add contact\r\n      </button>\r\n\r\n    </form>\r\n\r\n  )\r\n};\r\n\r\nexport default ContactForm;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: '',\r\n    \r\n  reducers: {\r\n    setFilter(state, action) {\r\n      return action.payload;\r\n   }\r\n  }\r\n})\r\n\r\nexport const filterReducer = filterSlice.reducer;\r\nexport const { setFilter } = filterSlice.actions;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\r\nimport { setFilter } from '../../redux/filterSlice';\r\n\r\nfunction Filter() {\r\n  const filterName = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const getFilteredContacts = (e) => {\r\n    const name = e.currentTarget.value;\r\n    dispatch(setFilter(name));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}>🔎 Find by name \r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterName}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          onChange={getFilteredContacts}\r\n        />\r\n      </label>\r\n    </>\r\n  )\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterName: PropTypes.string\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport s from './ContactList.module.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\r\nimport { deleteContact } from '../../redux/contactsSlice'; \r\n\r\nconst ContactList = () => {\r\n  const contactsList = useSelector(state => state.contacts);\r\n  const filterName = useSelector(state => state.filter).toLowerCase();\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredList = contactsList.filter(contact => contact.name.toLowerCase().includes(filterName))\r\n\r\n    return (\r\n    <ul className={s.list}>{filteredList.map( contact => {\r\n      return (\r\n        <li key={contact.id} className={s.item}>\r\n          <p className={s.text}>{contact.name}</p>\r\n          <p className={s.text}>{contact.number}</p>\r\n          <button\r\n            className={s.deleteBtn}\r\n            type=\"button\"\r\n            id={contact.id}\r\n            onClick={() => dispatch(deleteContact(contact.id))}\r\n          >Delete ❌</button>\r\n        </li>);\r\n      })}\r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default ContactList;","import s from './App.module.css';\r\n// import { useState } from 'react';\r\n\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport {  useSelector } from 'react-redux/es/hooks/useSelector';\r\n\r\nconst App = () => {\r\n  const contactsList = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n  // console.log(contactsList);\r\n\r\n  // const [contacts, setContacts] = useState(() => {\r\n  //   const localContacts = JSON.parse(localStorage.getItem('contacts'));\r\n  //   return localContacts ? localContacts : defaultContacts;\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   window.localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n\r\n  // const getFilteredContacts = () => {\r\n  //   const name = filter.toLowerCase();\r\n  //   const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(name))\r\n\r\n  //   return filteredContacts;\r\n  // }\r\n\r\n  return (\r\n    <div className={s.App}>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n       <h2>Contacts</h2>\r\n      <Filter />\r\n      { contactsList.length > 0 && <ContactList />\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;","import { configureStore,  combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contactsSlice';\r\nimport { filterReducer } from './filterSlice';\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n   middleware(getDefaultMiddleware){\r\n    return getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH,\r\n          REHYDRATE,\r\n          PAUSE,\r\n          PERSIST,\r\n          PURGE,\r\n          REGISTER,]\r\n      },\r\n    })\r\n  }\r\n});\r\n//local storage\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//REDUX\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2gPYY\",\"label\":\"ContactForm_label__jTKTK\",\"input\":\"ContactForm_input__19BeC\",\"addBtn\":\"ContactForm_addBtn__5ab0X\"};"],"sourceRoot":""}